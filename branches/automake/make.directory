
INCLUDES=$(EXT_INCLUDES) $(ALT_INCLUDES) $(LIB_INC) -I$(SRCPATH) -I$(ROOTPATH) $(patsubst %,-I%, $(SRCPATHS)) $(PLAT_INCLUDES)

SRCPATH=.

APPHOME?=.

DEBUGSUFFIX=d


ifdef COMPAT
	CPP=$(GNUCC)$(COMPAT)
else
	CPP=$(GNUCC)
endif




ifeq ($(IS_TEST), 1)
	TESTPREFIX=test-
	#test		--This isn't working so let's scrap it for now
	COMPILER_FLAGS=$(PROJECT_COMPILER_FLAGS) -D TEST_APP=1
	TESTLINKS= -lgtest
else
	TESTPREFIX=
	TESTLINKS=	
	COMPILER_FLAGS=$(PROJECT_COMPILER_FLAGS)
endif

LIBPATH=$(ROOTPATH)/bin/lib/$(MPIPATH)/$(PLATFORM)/$(BITCOUNT)bit/$(CPP)
BINPATH=$(ROOTPATH)/bin/$(APPHOME)

ifeq ($(RELEASE), 1)
	FAST_EXEC=-O3 $(MARCH) -fomit-frame-pointer -funroll-loops -fforce-addr -fexpensive-optimizations
	MODE_FLAG=$(FAST_EXEC)
	OBJECT_PATH=$(ROOTPATH)/build/$(TESTPREFIX)$(PROJECTNAME)/$(MPIPATH)/$(PLATFORM)-$(CPP)/$(BITCOUNT)bit/release
	LIBSUFFIX=$(COMPAT)$(EXEC_PREFIX)
else
	MODE_FLAG=-g -DDEBUG=1
	OBJECT_PATH=$(ROOTPATH)/build/$(TESTPREFIX)$(PROJECTNAME)/$(MPIPATH)/$(PLATFORM)-$(CPP)/$(BITCOUNT)bit/debug
	LIBSUFFIX=$(COMPAT)$(EXEC_PREFIX)$(DEBUGSUFFIX)
endif

ifeq ($(VERBOSE), 1)
	SUPRESS=
else
	VERBOSE=0
	SUPRESS=@
endif

ifeq ($(PREPROCESS), 1)
	PREPROC_FLAG=-E
	CMP_EXT=.i
else
	PREPROC_FLAG=
	CMP_EXT=.o
endif

ifeq ($(LIBRARY_MAKE), 1)
	MAINTARGET=$(LIBPATH)/$(LIBNAME)
	LINKER_FLAGS=$(AR_FLAGS)
	TEST_CALL=
else
	EXENAME=$(PROJECTNAME)$(EXE_PLAT)$(LIBSUFFIX)
	MAINTARGET=$(BINPATH)/$(TESTPREFIX)$(EXENAME)
	LINKER_FLAGS=$(APPFLAGS)  $(PLAT_LINKS) 
	TEST_CALL=valgrind $(VALGRIND_OPTIONS) $(MAINTARGET)	
endif


